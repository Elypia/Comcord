plugins {
    id "com.jfrog.bintray" version "1.8.4" apply false
}

allprojects() {
    apply plugin: "idea"
    apply plugin: "jacoco"

    group = "com.elypia.webhooker"
    version = "2.0.1"
    description = "Webserver with single endpoint for managing webhooks and receiving payloads from clients."

    ext {
        repoUrl = "https://gitlab.com/Elypia/webhooker"
        gitUrl = "${repoUrl}.git"
        issueUrl = "${repoUrl}/issues"
        website = "https://elypia.com/"
    }

    repositories {
        jcenter()
    }

    jacoco {
        toolVersion = "0.8.4"
    }
}

subprojects() {
    apply plugin: "java-library"
    apply plugin: "maven-publish"
    apply plugin: "com.jfrog.bintray"

    sourceCompatibility = 11
    targetCompatibility = 11

    [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

    dependencies {
        // Logging
        implementation "org.slf4j:slf4j-api:1.7.26"
        testRuntimeOnly "ch.qos.logback:logback-classic:1.2.3"

        // Testing
        testImplementation "org.junit.jupiter:junit-jupiter:5.4.2"
        testImplementation "org.mockito:mockito-core:2.28.2"
        testImplementation "com.squareup.okhttp3:okhttp:3.14.2"
    }

    /** Testing */

    test {
        useJUnitPlatform()
        finalizedBy jacocoTestReport

        reports {
            html.enabled = false
        }
    }

    /** Code Coverage */

    jacocoTestReport {
        reports {
            html.enabled = true
            xml.enabled = false
        }
    }

    /** Upload to Bintray */

    jar {
        manifest {
            attributes "Implementation-Title": "${this.name}-${project.name}",
                       "Implementation-Version": version
        }
    }

    task sourcesJar(type: Jar) {
        from sourceSets.main.allSource
        archiveClassifier = 'sources'
    }

    task javadocJar(type: Jar) {
        from javadoc
        archiveClassifier = 'javadoc'

        javadoc {
            options {
                links += [
                    "https://docs.oracle.com/en/java/javase/12/docs/api/"
                ]
            }
        }
    }

    artifacts {
        archives sourcesJar
        archives javadocJar
    }

    bintray {
        user = System.getenv("BINTRAY_USER")
        key = System.getenv("BINTRAY_KEY")
        publications = ['mavenJava']
        publish = true
        pkg {
            repo = this.name
            name = project.name
            desc = project.description
            userOrg = "elypia"
            websiteUrl = website
            licenses = ["Apache-2.0"]
            vcsUrl = gitUrl
            issueTrackerUrl = issueUrl
            publicDownloadNumbers = true
            version {
                name = project.version
                desc = project.description
                vcsTag = project.version
                released = new Date()
            }
        }
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                artifactId project.name
                groupId project.group
                version project.version
                from components.java
                artifact sourcesJar
                artifact javadocJar

                pom {
                    name = this.name
                    description = project.description
                    url = website
                    licenses {
                        license {
                            name = "The Apache License, Version 2.0"
                            url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                        }
                    }
                    developers {
                        developer {
                            id = "Seth"
                            name = "Seth"
                            email = "seth@elypia.com"
                        }
                    }
                    scm {
                        url = gitUrl
                    }
                }
            }
        }
    }
}
